{"ast":null,"code":"var _jsxFileName = \"/Users/friendly/coding/learn-react/react-notes-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Sidebar from \"./components/Sidebar\";\nimport Editor from \"./components/Editor\";\nimport { data } from \"./data\";\nimport Split from \"react-split\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const savedNote = localStorage.getItem(JSON.parse(\"note_name\"));\n  const [notes, setNotes] = React.useState(savedNote || []);\n  const [currentNoteId, setCurrentNoteId] = React.useState(notes[0] && notes[0].id || \"\"); // adding local storage \n  // useEffect monitors changes to notes\n\n  useEffect(() => {\n    localStorage.setItem(\"note_name\", JSON.stringify(notes));\n  }, [notes]);\n\n  function createNewNote() {\n    const newNote = {\n      id: nanoid(),\n      body: \"# Type your markdown note's title here\"\n    };\n    setNotes(prevNotes => [newNote, ...prevNotes]);\n    setCurrentNoteId(newNote.id);\n  }\n\n  function updateNote(text) {\n    setNotes(oldNotes => oldNotes.map(oldNote => {\n      return oldNote.id === currentNoteId ? { ...oldNote,\n        body: text\n      } : oldNote;\n    }));\n  }\n\n  function findCurrentNote() {\n    return notes.find(note => {\n      return note.id === currentNoteId;\n    }) || notes[0];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: notes.length > 0 ? /*#__PURE__*/_jsxDEV(Split, {\n      sizes: [30, 70],\n      direction: \"horizontal\",\n      className: \"split\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        notes: notes,\n        currentNote: findCurrentNote(),\n        setCurrentNoteId: setCurrentNoteId,\n        newNote: createNewNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), currentNoteId && notes.length > 0 && /*#__PURE__*/_jsxDEV(Editor, {\n        currentNote: findCurrentNote(),\n        updateNote: updateNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-notes\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"You have no notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"first-note\",\n        onClick: createNewNote,\n        children: \"Create one now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"a58WwS142F7OG4dDBPTHPFx/JYQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Editor","data","Split","nanoid","App","savedNote","localStorage","getItem","JSON","parse","notes","setNotes","currentNoteId","setCurrentNoteId","id","setItem","stringify","createNewNote","newNote","body","prevNotes","updateNote","text","oldNotes","map","oldNote","findCurrentNote","find","note","length"],"sources":["/Users/friendly/coding/learn-react/react-notes-app/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport Sidebar from \"./components/Sidebar\"\r\nimport Editor from \"./components/Editor\"\r\nimport { data } from \"./data\"\r\nimport Split from \"react-split\"\r\nimport {nanoid} from \"nanoid\"\r\n\r\nexport default function App() {\r\n\r\n    const savedNote = localStorage.getItem(JSON.parse(\"note_name\"))\r\n\r\n    const [notes, setNotes] = React.useState(savedNote || [])\r\n    const [currentNoteId, setCurrentNoteId] = React.useState(\r\n        (notes[0] && notes[0].id) || \"\"\r\n    )\r\n    \r\n// adding local storage \r\n// useEffect monitors changes to notes\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"note_name\", JSON.stringify(notes))\r\n        }, [notes])\r\n\r\n\r\n    function createNewNote() {\r\n        const newNote = {\r\n            id: nanoid(),\r\n            body: \"# Type your markdown note's title here\"\r\n        }\r\n        setNotes(prevNotes => [newNote, ...prevNotes])\r\n        setCurrentNoteId(newNote.id)\r\n    }\r\n    \r\n    function updateNote(text) {\r\n        setNotes(oldNotes => oldNotes.map(oldNote => {\r\n            return oldNote.id === currentNoteId\r\n                ? { ...oldNote, body: text }\r\n                : oldNote\r\n        }))\r\n    }\r\n    \r\n    function findCurrentNote() {\r\n        return notes.find(note => {\r\n            return note.id === currentNoteId\r\n        }) || notes[0]\r\n    }\r\n    \r\n    return (\r\n        <main>\r\n        {\r\n            notes.length > 0 \r\n            ?\r\n            <Split \r\n                sizes={[30, 70]} \r\n                direction=\"horizontal\" \r\n                className=\"split\"\r\n            >\r\n                <Sidebar\r\n                    notes={notes}\r\n                    currentNote={findCurrentNote()}\r\n                    setCurrentNoteId={setCurrentNoteId}\r\n                    newNote={createNewNote}\r\n                />\r\n                {\r\n                    currentNoteId && \r\n                    notes.length > 0 &&\r\n                    <Editor \r\n                        currentNote={findCurrentNote()} \r\n                        updateNote={updateNote} \r\n                    />\r\n                }\r\n            </Split>\r\n            :\r\n            <div className=\"no-notes\">\r\n                <h1>You have no notes</h1>\r\n                <button \r\n                    className=\"first-note\" \r\n                    onClick={createNewNote}\r\n                >\r\n                    Create one now\r\n                </button>\r\n            </div>\r\n            \r\n        }\r\n        </main>\r\n    )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAE1B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBC,IAAI,CAACC,KAAL,CAAW,WAAX,CAArB,CAAlB;EAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACC,QAAN,CAAeQ,SAAS,IAAI,EAA5B,CAA1B;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCjB,KAAK,CAACC,QAAN,CACrCa,KAAK,CAAC,CAAD,CAAL,IAAYA,KAAK,CAAC,CAAD,CAAL,CAASI,EAAtB,IAA6B,EADS,CAA1C,CAL0B,CAS9B;EACA;;EAEIhB,SAAS,CAAC,MAAM;IACZQ,YAAY,CAACS,OAAb,CAAqB,WAArB,EAAkCP,IAAI,CAACQ,SAAL,CAAeN,KAAf,CAAlC;EACC,CAFI,EAEF,CAACA,KAAD,CAFE,CAAT;;EAKA,SAASO,aAAT,GAAyB;IACrB,MAAMC,OAAO,GAAG;MACZJ,EAAE,EAAEX,MAAM,EADE;MAEZgB,IAAI,EAAE;IAFM,CAAhB;IAIAR,QAAQ,CAACS,SAAS,IAAI,CAACF,OAAD,EAAU,GAAGE,SAAb,CAAd,CAAR;IACAP,gBAAgB,CAACK,OAAO,CAACJ,EAAT,CAAhB;EACH;;EAED,SAASO,UAAT,CAAoBC,IAApB,EAA0B;IACtBX,QAAQ,CAACY,QAAQ,IAAIA,QAAQ,CAACC,GAAT,CAAaC,OAAO,IAAI;MACzC,OAAOA,OAAO,CAACX,EAAR,KAAeF,aAAf,GACD,EAAE,GAAGa,OAAL;QAAcN,IAAI,EAAEG;MAApB,CADC,GAEDG,OAFN;IAGH,CAJoB,CAAb,CAAR;EAKH;;EAED,SAASC,eAAT,GAA2B;IACvB,OAAOhB,KAAK,CAACiB,IAAN,CAAWC,IAAI,IAAI;MACtB,OAAOA,IAAI,CAACd,EAAL,KAAYF,aAAnB;IACH,CAFM,KAEDF,KAAK,CAAC,CAAD,CAFX;EAGH;;EAED,oBACI;IAAA,UAEIA,KAAK,CAACmB,MAAN,GAAe,CAAf,gBAEA,QAAC,KAAD;MACI,KAAK,EAAE,CAAC,EAAD,EAAK,EAAL,CADX;MAEI,SAAS,EAAC,YAFd;MAGI,SAAS,EAAC,OAHd;MAAA,wBAKI,QAAC,OAAD;QACI,KAAK,EAAEnB,KADX;QAEI,WAAW,EAAEgB,eAAe,EAFhC;QAGI,gBAAgB,EAAEb,gBAHtB;QAII,OAAO,EAAEI;MAJb;QAAA;QAAA;QAAA;MAAA,QALJ,EAYQL,aAAa,IACbF,KAAK,CAACmB,MAAN,GAAe,CADf,iBAEA,QAAC,MAAD;QACI,WAAW,EAAEH,eAAe,EADhC;QAEI,UAAU,EAAEL;MAFhB;QAAA;QAAA;QAAA;MAAA,QAdR;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA,gBAuBA;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,SAAS,EAAC,YADd;QAEI,OAAO,EAAEJ,aAFb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAzBJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAuCH;;GA/EuBb,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}