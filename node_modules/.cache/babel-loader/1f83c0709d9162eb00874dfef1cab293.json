{"ast":null,"code":"var stringWidth = require('string-width');\n\nvar stripAnsi = require('strip-ansi');\n\nvar wrap = require('wrap-ansi');\n\nvar align = {\n  right: alignRight,\n  center: alignCenter\n};\nvar top = 0;\nvar right = 1;\nvar bottom = 2;\nvar left = 3;\n\nfunction UI(opts) {\n  this.width = opts.width;\n  this.wrap = opts.wrap;\n  this.rows = [];\n}\n\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments);\n  cols.span = true;\n};\n\nUI.prototype.resetOutput = function () {\n  this.rows = [];\n};\n\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('');\n\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0]);\n  }\n\n  var cols = [];\n\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg));else cols.push(arg);\n  }\n\n  this.rows.push(cols);\n  return cols;\n};\n\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' && /[\\t\\n]/.test(arguments[0]);\n};\n\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this;\n\n  var rows = str.split('\\n');\n  var leftColumnWidth = 0; // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n\n  rows.forEach(function (row) {\n    var columns = row.split('\\t');\n\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(Math.floor(_this.width * 0.5), stringWidth(columns[0]));\n    }\n  }); // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n\n  rows.forEach(function (row) {\n    var columns = row.split('\\t');\n\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: i === 0 && columns.length > 1 ? leftColumnWidth : undefined\n      };\n    }));\n  });\n  return this.rows[this.rows.length - 1];\n};\n\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  };\n};\n\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str);\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length];\n};\n\nUI.prototype.toString = function () {\n  var _this = this;\n\n  var lines = [];\n\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines);\n  }); // don't display any lines with the\n  // hidden flag set.\n\n\n  lines = lines.filter(function (line) {\n    return !line.hidden;\n  });\n  return lines.map(function (line) {\n    return line.text;\n  }).join('\\n');\n};\n\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this;\n\n  var padding;\n\n  var rrows = this._rasterize(row);\n\n  var str = '';\n  var ts;\n  var width;\n  var wrapWidth;\n  rrows.forEach(function (rrow, r) {\n    str = '';\n    rrow.forEach(function (col, c) {\n      ts = ''; // temporary string used during alignment/padding.\n\n      width = row[c].width; // the width with padding.\n\n      wrapWidth = _this._negatePadding(row[c]); // the width without padding.\n\n      ts += col;\n\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' ';\n      } // align the string within its column.\n\n\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth);\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ');\n      } // apply border and padding to string.\n\n\n      padding = row[c].padding || [0, 0, 0, 0];\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ');\n      str += addBorder(row[c], ts, '| ');\n      str += ts;\n      str += addBorder(row[c], ts, ' |');\n      if (padding[right]) str += new Array(padding[right] + 1).join(' '); // if prior row is span, try to render the\n      // current row on the prior line.\n\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1]);\n      }\n    }); // remove trailing whitespace.\n\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    });\n  });\n  return lines;\n};\n\nfunction addBorder(col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return '';else if (ts.trim().length) return style;else return '  ';\n  }\n\n  return '';\n} // if the full 'source' can render in\n// the target line, do so.\n\n\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length;\n  var target = previousLine.text;\n  var targetTextWidth = stringWidth(target.trimRight());\n  if (!previousLine.span) return source; // if we're not applying wrapping logic,\n  // just always append to the span.\n\n  if (!this.wrap) {\n    previousLine.hidden = true;\n    return target + source;\n  }\n\n  if (leadingWhitespace < targetTextWidth) return source;\n  previousLine.hidden = true;\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft();\n};\n\nUI.prototype._rasterize = function (row) {\n  var _this = this;\n\n  var i;\n  var rrow;\n  var rrows = [];\n\n  var widths = this._columnWidths(row);\n\n  var wrapped; // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c];\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), {\n      hard: true\n    }).split('\\n');else wrapped = col.text.split('\\n');\n\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.');\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\");\n    } // add top and bottom padding.\n\n\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('');\n\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('');\n    }\n\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([]);\n      rrow = rrows[r];\n\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('');\n      }\n\n      rrow.push(str);\n    });\n  });\n  return rrows;\n};\n\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width;\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0);\n  if (col.border) wrapWidth -= 4;\n  return wrapWidth;\n};\n\nUI.prototype._columnWidths = function (row) {\n  var _this = this;\n\n  var widths = [];\n  var unset = row.length;\n  var unsetWidth;\n  var remainingWidth = this.width; // column widths can be set in config.\n\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--;\n      widths[i] = col.width;\n      remainingWidth -= col.width;\n    } else {\n      widths[i] = undefined;\n    }\n  }); // any unset widths should be calculated.\n\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset);\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text);else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]));\n  });\n  return widths;\n}; // calculates the minimum width of\n// a column, based on padding preferences.\n\n\nfunction _minWidth(col) {\n  var padding = col.padding || [];\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0);\n  if (col.border) minWidth += 4;\n  return minWidth;\n}\n\nfunction getWindowWidth() {\n  if (typeof process === 'object' && process.stdout && process.stdout.columns) return process.stdout.columns;\n}\n\nfunction alignRight(str, width) {\n  str = str.trim();\n  var padding = '';\n  var strWidth = stringWidth(str);\n\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ');\n  }\n\n  return padding + str;\n}\n\nfunction alignCenter(str, width) {\n  str = str.trim();\n  var padding = '';\n  var strWidth = stringWidth(str.trim());\n\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ');\n  }\n\n  return padding + str;\n}\n\nmodule.exports = function (opts) {\n  opts = opts || {};\n  return new UI({\n    width: (opts || {}).width || getWindowWidth() || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  });\n};","map":{"version":3,"names":["stringWidth","require","stripAnsi","wrap","align","right","alignRight","center","alignCenter","top","bottom","left","UI","opts","width","rows","prototype","span","cols","div","apply","arguments","resetOutput","length","_shouldApplyLayoutDSL","_applyLayoutDSL","i","arg","undefined","push","_colFromString","test","str","_this","split","leftColumnWidth","forEach","row","columns","Math","min","floor","map","r","text","trim","padding","_measurePadding","noAnsi","match","toString","lines","rowToString","filter","line","hidden","join","rrows","_rasterize","ts","wrapWidth","rrow","col","c","_negatePadding","Array","addBorder","_renderInline","replace","style","border","source","previousLine","leadingWhitespace","target","targetTextWidth","trimRight","trimLeft","widths","_columnWidths","wrapped","hard","unshift","unset","unsetWidth","remainingWidth","w","max","_minWidth","minWidth","getWindowWidth","process","stdout","strWidth","parseInt","module","exports"],"sources":["/home/lawrence/learn-react/react-notes-app/node_modules/cliui/index.js"],"sourcesContent":["var stringWidth = require('string-width')\nvar stripAnsi = require('strip-ansi')\nvar wrap = require('wrap-ansi')\nvar align = {\n  right: alignRight,\n  center: alignCenter\n}\nvar top = 0\nvar right = 1\nvar bottom = 2\nvar left = 3\n\nfunction UI (opts) {\n  this.width = opts.width\n  this.wrap = opts.wrap\n  this.rows = []\n}\n\nUI.prototype.span = function () {\n  var cols = this.div.apply(this, arguments)\n  cols.span = true\n}\n\nUI.prototype.resetOutput = function () {\n  this.rows = []\n}\n\nUI.prototype.div = function () {\n  if (arguments.length === 0) this.div('')\n  if (this.wrap && this._shouldApplyLayoutDSL.apply(this, arguments)) {\n    return this._applyLayoutDSL(arguments[0])\n  }\n\n  var cols = []\n\n  for (var i = 0, arg; (arg = arguments[i]) !== undefined; i++) {\n    if (typeof arg === 'string') cols.push(this._colFromString(arg))\n    else cols.push(arg)\n  }\n\n  this.rows.push(cols)\n  return cols\n}\n\nUI.prototype._shouldApplyLayoutDSL = function () {\n  return arguments.length === 1 && typeof arguments[0] === 'string' &&\n    /[\\t\\n]/.test(arguments[0])\n}\n\nUI.prototype._applyLayoutDSL = function (str) {\n  var _this = this\n  var rows = str.split('\\n')\n  var leftColumnWidth = 0\n\n  // simple heuristic for layout, make sure the\n  // second column lines up along the left-hand.\n  // don't allow the first column to take up more\n  // than 50% of the screen.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    if (columns.length > 1 && stringWidth(columns[0]) > leftColumnWidth) {\n      leftColumnWidth = Math.min(\n        Math.floor(_this.width * 0.5),\n        stringWidth(columns[0])\n      )\n    }\n  })\n\n  // generate a table:\n  //  replacing ' ' with padding calculations.\n  //  using the algorithmically generated width.\n  rows.forEach(function (row) {\n    var columns = row.split('\\t')\n    _this.div.apply(_this, columns.map(function (r, i) {\n      return {\n        text: r.trim(),\n        padding: _this._measurePadding(r),\n        width: (i === 0 && columns.length > 1) ? leftColumnWidth : undefined\n      }\n    }))\n  })\n\n  return this.rows[this.rows.length - 1]\n}\n\nUI.prototype._colFromString = function (str) {\n  return {\n    text: str,\n    padding: this._measurePadding(str)\n  }\n}\n\nUI.prototype._measurePadding = function (str) {\n  // measure padding without ansi escape codes\n  var noAnsi = stripAnsi(str)\n  return [0, noAnsi.match(/\\s*$/)[0].length, 0, noAnsi.match(/^\\s*/)[0].length]\n}\n\nUI.prototype.toString = function () {\n  var _this = this\n  var lines = []\n\n  _this.rows.forEach(function (row, i) {\n    _this.rowToString(row, lines)\n  })\n\n  // don't display any lines with the\n  // hidden flag set.\n  lines = lines.filter(function (line) {\n    return !line.hidden\n  })\n\n  return lines.map(function (line) {\n    return line.text\n  }).join('\\n')\n}\n\nUI.prototype.rowToString = function (row, lines) {\n  var _this = this\n  var padding\n  var rrows = this._rasterize(row)\n  var str = ''\n  var ts\n  var width\n  var wrapWidth\n\n  rrows.forEach(function (rrow, r) {\n    str = ''\n    rrow.forEach(function (col, c) {\n      ts = '' // temporary string used during alignment/padding.\n      width = row[c].width // the width with padding.\n      wrapWidth = _this._negatePadding(row[c]) // the width without padding.\n\n      ts += col\n\n      for (var i = 0; i < wrapWidth - stringWidth(col); i++) {\n        ts += ' '\n      }\n\n      // align the string within its column.\n      if (row[c].align && row[c].align !== 'left' && _this.wrap) {\n        ts = align[row[c].align](ts, wrapWidth)\n        if (stringWidth(ts) < wrapWidth) ts += new Array(width - stringWidth(ts)).join(' ')\n      }\n\n      // apply border and padding to string.\n      padding = row[c].padding || [0, 0, 0, 0]\n      if (padding[left]) str += new Array(padding[left] + 1).join(' ')\n      str += addBorder(row[c], ts, '| ')\n      str += ts\n      str += addBorder(row[c], ts, ' |')\n      if (padding[right]) str += new Array(padding[right] + 1).join(' ')\n\n      // if prior row is span, try to render the\n      // current row on the prior line.\n      if (r === 0 && lines.length > 0) {\n        str = _this._renderInline(str, lines[lines.length - 1])\n      }\n    })\n\n    // remove trailing whitespace.\n    lines.push({\n      text: str.replace(/ +$/, ''),\n      span: row.span\n    })\n  })\n\n  return lines\n}\n\nfunction addBorder (col, ts, style) {\n  if (col.border) {\n    if (/[.']-+[.']/.test(ts)) return ''\n    else if (ts.trim().length) return style\n    else return '  '\n  }\n  return ''\n}\n\n// if the full 'source' can render in\n// the target line, do so.\nUI.prototype._renderInline = function (source, previousLine) {\n  var leadingWhitespace = source.match(/^ */)[0].length\n  var target = previousLine.text\n  var targetTextWidth = stringWidth(target.trimRight())\n\n  if (!previousLine.span) return source\n\n  // if we're not applying wrapping logic,\n  // just always append to the span.\n  if (!this.wrap) {\n    previousLine.hidden = true\n    return target + source\n  }\n\n  if (leadingWhitespace < targetTextWidth) return source\n\n  previousLine.hidden = true\n\n  return target.trimRight() + new Array(leadingWhitespace - targetTextWidth + 1).join(' ') + source.trimLeft()\n}\n\nUI.prototype._rasterize = function (row) {\n  var _this = this\n  var i\n  var rrow\n  var rrows = []\n  var widths = this._columnWidths(row)\n  var wrapped\n\n  // word wrap all columns, and create\n  // a data-structure that is easy to rasterize.\n  row.forEach(function (col, c) {\n    // leave room for left and right padding.\n    col.width = widths[c]\n    if (_this.wrap) wrapped = wrap(col.text, _this._negatePadding(col), { hard: true }).split('\\n')\n    else wrapped = col.text.split('\\n')\n\n    if (col.border) {\n      wrapped.unshift('.' + new Array(_this._negatePadding(col) + 3).join('-') + '.')\n      wrapped.push(\"'\" + new Array(_this._negatePadding(col) + 3).join('-') + \"'\")\n    }\n\n    // add top and bottom padding.\n    if (col.padding) {\n      for (i = 0; i < (col.padding[top] || 0); i++) wrapped.unshift('')\n      for (i = 0; i < (col.padding[bottom] || 0); i++) wrapped.push('')\n    }\n\n    wrapped.forEach(function (str, r) {\n      if (!rrows[r]) rrows.push([])\n\n      rrow = rrows[r]\n\n      for (var i = 0; i < c; i++) {\n        if (rrow[i] === undefined) rrow.push('')\n      }\n      rrow.push(str)\n    })\n  })\n\n  return rrows\n}\n\nUI.prototype._negatePadding = function (col) {\n  var wrapWidth = col.width\n  if (col.padding) wrapWidth -= (col.padding[left] || 0) + (col.padding[right] || 0)\n  if (col.border) wrapWidth -= 4\n  return wrapWidth\n}\n\nUI.prototype._columnWidths = function (row) {\n  var _this = this\n  var widths = []\n  var unset = row.length\n  var unsetWidth\n  var remainingWidth = this.width\n\n  // column widths can be set in config.\n  row.forEach(function (col, i) {\n    if (col.width) {\n      unset--\n      widths[i] = col.width\n      remainingWidth -= col.width\n    } else {\n      widths[i] = undefined\n    }\n  })\n\n  // any unset widths should be calculated.\n  if (unset) unsetWidth = Math.floor(remainingWidth / unset)\n  widths.forEach(function (w, i) {\n    if (!_this.wrap) widths[i] = row[i].width || stringWidth(row[i].text)\n    else if (w === undefined) widths[i] = Math.max(unsetWidth, _minWidth(row[i]))\n  })\n\n  return widths\n}\n\n// calculates the minimum width of\n// a column, based on padding preferences.\nfunction _minWidth (col) {\n  var padding = col.padding || []\n  var minWidth = 1 + (padding[left] || 0) + (padding[right] || 0)\n  if (col.border) minWidth += 4\n  return minWidth\n}\n\nfunction getWindowWidth () {\n  if (typeof process === 'object' && process.stdout && process.stdout.columns) return process.stdout.columns\n}\n\nfunction alignRight (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str)\n\n  if (strWidth < width) {\n    padding = new Array(width - strWidth + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nfunction alignCenter (str, width) {\n  str = str.trim()\n  var padding = ''\n  var strWidth = stringWidth(str.trim())\n\n  if (strWidth < width) {\n    padding = new Array(parseInt((width - strWidth) / 2, 10) + 1).join(' ')\n  }\n\n  return padding + str\n}\n\nmodule.exports = function (opts) {\n  opts = opts || {}\n\n  return new UI({\n    width: (opts || {}).width || getWindowWidth() || 80,\n    wrap: typeof opts.wrap === 'boolean' ? opts.wrap : true\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}